#include <iostream>
#include <fstream>
#include <string>
#include <cstdlib>
#include <ctime>

using namespace std;

//Generate a simple hash
string simpleHash(string input) {
    unsigned long hash = 5381;
    for (char c : input) {
        hash = ((hash << 5) + hash) + c;
    }
    return to_string(hash);
}

//To craete CAPTCHA
int generateCaptcha() {
    int num1 = rand() % 10;
    int num2 = rand() % 10;
    cout << "CAPTCHA: " << num1 << " + " << num2 << " = ? ";
    return num1 + num2;
}

//Generate a 6-digit OTP
int generateOTP() {
    return 100000 + rand() % 900000; // Generates a 6-digit OTP
}

//register
void registerUser() {
    string username, password, passkey, hashedPassword;
    cout << "Enter username: ";
    cin >> username;
    cout << "Enter password: ";
    cin >> password;
    cout << "Enter passkey (set your unique passkey): ";
    cin >> passkey;

    // Hash the password before storing
    hashedPassword = simpleHash(password);

    // Store credentials in a file
    ofstream outFile("users.db", ios::app);
    outFile << username << " " << hashedPassword << " " << passkey << endl;
    outFile.close();

    cout << "Registration successful!\n";
}

//login
void loginUser() {
    string username, password, passkey, storedUsername, storedPassword, storedPasskey;
    cout << "Enter username: ";
    cin >> username;
    cout << "Enter password: ";
    cin >> password;
    cout << "Enter passkey: ";
    cin >> passkey;

    //Generate and validate CAPTCHA
    srand(time(0));
    int captchaResult = generateCaptcha();
    int userCaptchaInput;
    cin >> userCaptchaInput;

    if (userCaptchaInput != captchaResult) {
        cout << "CAPTCHA verification failed! Login denied.\n";
        return;
    }

    ifstream inputFile("users.db");
    bool loginSuccess = false;

    while (inputFile >> storedUsername >> storedPassword >> storedPasskey) {
        if (username == storedUsername && simpleHash(password) == storedPassword && passkey == storedPasskey) {
            loginSuccess = true;
            break;
        }
    }
    inputFile.close();

    if (loginSuccess) {
        //Generate OTP
        int generatedOTP = generateOTP();
        cout << "Your OTP is: " << generatedOTP << endl;

        int enteredOTP;
        cout << "Enter the OTP: ";
        cin >> enteredOTP;

        if (enteredOTP == generatedOTP) {
            cout << "Login successful! Welcome, " << username << "!\n";
        } else {
            cout << "Invalid OTP! Access denied.\n";
        }
    } else {
        cout << "Invalid credentials! Access denied.\n";
    }
}

int main() {
    int choice;
    while (true) {
        cout << "\nSecure Authentication System\n";
        cout << "1. Register\n";
        cout << "2. Login\n";
        cout << "3. Exit\n";
        cout << "Enter choice: ";
        cin >> choice;

        switch (choice) {
            case 1:
                registerUser();
                break;
            case 2:
                loginUser();
                break;
            case 3:
                cout << "Exiting...\n";
                return 0;
            default:
                cout << "Invalid choice! Try again.\n";
        }
    }
}
